---
AWSTemplateFormatVersion: 2010-09-09
Transform: "AWS::LanguageExtensions"
# Sample YAML to demonstrate creating a job using a ORACLE JDBC DB with the viamericas data to an S3 file
#
#
# Parameters section contains names that are substituted in the Resources section
# These parameters are the names the resources created in the Data Catalog
Parameters:
  VIAIAMRoleArn:
    Type: String
    Default: arn:aws:iam::283731589572:role/GlueRolFullAccess
  VIACrawlerRolArn:
    Type: String
    Default: arn:aws:iam::283731589572:role/sdlf-lakeformation-admin
  VIADatabaseName:
    Type: String
    Default: stage
  # The S3 path where the script for this job is located
  VIAConnectionName:
    Type: String
    Default: via-database-connection
  # State machine
  VIARolStateMachineArn:
    Type: String
    Default: arn:aws:iam::283731589572:role/cf-aws-glue-sf-run

  VIAStateMachineType:
    Type: String
    Default: STANDARD

  # SNS
  VIASnsTopicArn:
    Type: String
    Default: arn:aws:sns:us-east-1:283731589572:sdlf-email-notifications

  Environment:
    Type: String
    Default: dev

  # External python function
  ViaExternalPythonFunctions:
    Type: String
    Default: s3://viamericas-datalake-dev-us-east-1-283731589572-glue-jobs/Codes.zip
#
#
# Resources section defines metadata for the Data Catalog
Resources:
  AuditGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Role: !Ref VIAIAMRoleArn
      #DefaultArguments: JSON object
      # For example, if required by script, set temporary directory as DefaultArguments={'--TempDir'; 's3://aws-glue-temporary-xyc/sal'}
      Connections:
        Connections:
          - !Ref VIAConnectionName
      #MaxRetries: Double
      Description: "Job created with CloudFormation using existing script"
      #LogUri: String
      Command:
        Name: "glueetl"
        PythonVersion: "3"
        ScriptLocation:
          "s3://viamericas-datalake-dev-us-east-1-283731589572-glue-jobs/bulk/scripts/" #! Set location
      NumberOfWorkers:
          4
      GlueVersion: "4.0"
      DefaultArguments:
        "--conf": !Sub "spark.shuffle.glue.s3ShuffleBucket=s3://viamericas-datalake-${Environment}-us-east-1-${AWS::AccountId}-athena/gluetmp/"
        "----write-shuffle-files-to-s3": "true"
        "--write-shuffle-spills-to-s3": "true"
        '--enable-metrics': 'true'
      Tags:
        "map-migrated": "mig42454"
      ExecutionProperty:
        MaxConcurrentRuns: 1
      Name:
        "sdlf_gj_bulk_"  #! Set name
      WorkerType: "G.1X"

  # Create jobs to run script which accesses JDBC viamericas db via a connection and write to S3 file as parquet.
  AuditGlueJobIncremental:
    Type: AWS::Glue::Job
    Properties:
      Role: !Ref VIAIAMRoleArn
      #DefaultArguments: JSON object
      # For example, if required by script, set temporary directory as DefaultArguments={'--TempDir'; 's3://aws-glue-temporary-xyc/sal'}
      Connections:
        Connections:
          - !Ref VIAConnectionName
      #MaxRetries: Double
      Description: "Job created with CloudFormation using existing scripts"
      #LogUri: String
      Command:
        Name: "glueetl"
        PythonVersion: "3"
        ScriptLocation:
          "s3://viamericas-datalake-dev-us-east-1-283731589572-glue-jobs/incremental/scripts/" #! Set location
      NumberOfWorkers: 4
      GlueVersion: "4.0"
      DefaultArguments:
        "--conf": !Sub "spark.shuffle.glue.s3ShuffleBucket=s3://viamericas-datalake-${Environment}-us-east-1-${AWS::AccountId}-athena/gluetmp/"
        "----write-shuffle-files-to-s3": "true"
        "--write-shuffle-spills-to-s3": "true"
        '--enable-metrics': 'true'
        "--additional-python-modules": "awswrangler==2.14.0"
        '--enable-glue-datacatalog': 'true'
        '--extra-py-files': !Ref ViaExternalPythonFunctions
      Tags:
        "map-migrated": "mig42454"
      ExecutionProperty:
        MaxConcurrentRuns: 1
      Name:
        "sdlf_gj_incremental_" #! Set name
      WorkerType: "G.1X"
      Timeout: 330

  # Create crawlers that create the schema in the database
  AuditGlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name:
        "sdlf_crw_" #! Set name
      Role: !Ref VIACrawlerRolArn
      #Classifiers: none, use the default classifier
      Description: "AWS Glue crawler to crawl viamericas data"
      #Schedule: none, use default run-on-demand
      DatabaseName: !Ref VIADatabaseName
      Targets:
        S3Targets:
          # Private S3 path with the viamericas data
          - Path:
              "s3://viamericas-datalake-dev-us-east-1-283731589572-raw/" #! Set path
          - ConnectionName: !Ref VIAConnectionName
      Tags:
        "map-migrated": "mig42454"
      TablePrefix: ""
      RecrawlPolicy:
        RecrawlBehavior: "CRAWL_EVERYTHING"
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "DEPRECATE_IN_DATABASE"
      Configuration: '{"Version":1.0,"CreatePartitionIndex":true}'


  # State machines
  AuditStateMachines:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      Definition:
            {
              "Comment": "This executes a glue job that writes to a S3 bucket and then runs a Crawler over the path the Glue Job wrote data to",
              "StartAt": "RunGlueJob",
              "States":
                {
                  "RunGlueJob":
                    {
                      "Parameters":
                        {
                          "JobName":
                            "name", #! set name
                        },
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Type": "Task",
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "States.ALL"
                          ],
                          "BackoffRate": 2,
                          "IntervalSeconds": 180,
                          "MaxAttempts": 3
                        }
                      ],
                      "Catch":
                        [
                          {
                            "ErrorEquals": ["States.ALL"],
                            "Next": "SNS Publish",
                          },
                        ],
                      "Next": "RunCrawler",
                    },
                  "RunCrawler":
                    {
                      "Parameters":
                        {
                          "Name":
                            "crawler name", #! Set name
                        },
                      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
                      "Type": "Task",
                      "End": true,
                    },
                  "SNS Publish":
                    {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::sns:publish",
                      "Parameters":
                        { "TopicArn": !Ref VIASnsTopicArn, "Message.$": "$" },
                      "Next": "Fail"
                    },
                    "Fail": 
                    {
                      "Type": "Fail"
                    }
                },
            }
      #DefinitionSubstitutions:
      #  Key: Value
      #LoggingConfiguration:
      #  LoggingConfiguration
      RoleArn: !Ref VIARolStateMachineArn
      StateMachineName:
        "sdlf_sm_bulk_" #! Set name
      StateMachineType: !Ref VIAStateMachineType
      Tags:
        - Key: "map-migrated"
          Value: "mig42454"
      # - TagsEntry
      #TracingConfiguration:
      #  TracingConfiguration
  
  # State machines
  AuditStateMachinesIncremental:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      Definition:
            {
              "Comment": "This executes a glue job that writes to a S3 bucket and then runs a Crawler over the path the Glue Job wrote data to",
              "StartAt": "RunGlueJob",
              "States":
                {
                  "RunGlueJob":
                    {
                      "Parameters":
                        {
                          "JobName":
                            "name", #! set job name
                        },
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Type": "Task",
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "States.ALL"
                          ],
                          "BackoffRate": 2,
                          "IntervalSeconds": 180,
                          "MaxAttempts": 3
                        }
                      ],
                      "Catch":
                        [
                          {
                            "ErrorEquals": ["States.ALL"],
                            "Next": "SNS Publish",
                          },
                        ],
                      "End": true,
                    },
                  "SNS Publish":
                    {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::sns:publish",
                      "Parameters":
                        { 
                          "TopicArn": !Ref VIASnsTopicArn, 
                          "Message.$": "$" 
                        },
                      "Next": "Fail"
                    },
                    "Fail": 
                    {
                      "Type": "Fail"
                    }
                },
            }
          #DefinitionSubstitutions:
          #  Key: Value
          #LoggingConfiguration:
          #  LoggingConfiguration
      RoleArn: !Ref VIARolStateMachineArn
      StateMachineName:
        "sdlf_sm_incremental_" #! Set name
      StateMachineType: !Ref VIAStateMachineType
      Tags:
        - Key: "map-migrated"
          Value: "mig42454"
      #  - TagsEntry
      #TracingConfiguration:
      #  TracingConfiguration

