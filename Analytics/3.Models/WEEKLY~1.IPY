{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fad936de-3bac-492f-bbc4-a6959c5205d1",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import boto3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ea967389-2758-4a57-86f6-e833d9b4d41e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from io import StringIO"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b732f32c-e12b-4c9f-8891-22209c98dd83",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set up S3 client\n",
    "client = boto3.client('s3')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "37b6177b-9077-493a-80c0-78fc5ea564de",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "bucket_name = 'viamericas-datalake-dev-us-east-1-283731589572-analytics'\n",
    "path = 'Forecast/Forecast_analysis/Weekly_14lags_with_zeros_8_experiments/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "56b977bb-18e5-43fc-9558-0a7dfbaad192",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Listing objects \n",
    "elements = client.list_objects(Bucket=bucket_name, Prefix=path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "87775d27-1395-44e9-b011-571821bd95d7",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Initialize an empty list \n",
    "dfs = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8ba4fc5e-2f40-4000-b169-333b360fe4fd",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Iterate through each CSV in the S3 path\n",
    "for obj in elements.get('Contents', []):\n",
    "#    print(obj)\n",
    "    # Check if the object is a CSV file\n",
    "    if obj['Key'].endswith('.csv'):\n",
    "        # Read CSV content from S3\n",
    "        response = client.get_object(Bucket=bucket_name, Key=obj['Key'])\n",
    "#        print(obj['Key'])\n",
    "        csv_content = response['Body'].read().decode('utf-8')\n",
    "\n",
    "        # Transform CSV content to df\n",
    "        df = pd.read_csv(StringIO(csv_content))\n",
    "\n",
    "        dfs.append(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c3d36fed-4464-4b36-a65f-5e397f8cdfda",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "final_df = pd.concat(dfs, ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9ef389b8-c488-41fa-97a1-86107eceac83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>item_id</th>\n",
       "      <th>country</th>\n",
       "      <th>payer</th>\n",
       "      <th>date</th>\n",
       "      <th>p10</th>\n",
       "      <th>p50</th>\n",
       "      <th>p90</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>91</td>\n",
       "      <td>liberia</td>\n",
       "      <td>nafa</td>\n",
       "      <td>2023-07-01T00:00:00Z</td>\n",
       "      <td>-209.463943</td>\n",
       "      <td>45.884727</td>\n",
       "      <td>339.438873</td>\n",
       "      <td>37.864941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>91</td>\n",
       "      <td>liberia</td>\n",
       "      <td>nafa</td>\n",
       "      <td>2023-07-02T00:00:00Z</td>\n",
       "      <td>-164.590088</td>\n",
       "      <td>6.275280</td>\n",
       "      <td>131.478683</td>\n",
       "      <td>9.303105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>91</td>\n",
       "      <td>liberia</td>\n",
       "      <td>nafa</td>\n",
       "      <td>2023-07-03T00:00:00Z</td>\n",
       "      <td>5.402088</td>\n",
       "      <td>60.157650</td>\n",
       "      <td>114.486313</td>\n",
       "      <td>59.723827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>91</td>\n",
       "      <td>liberia</td>\n",
       "      <td>nafa</td>\n",
       "      <td>2023-07-04T00:00:00Z</td>\n",
       "      <td>-58.251900</td>\n",
       "      <td>129.881897</td>\n",
       "      <td>262.771912</td>\n",
       "      <td>111.680710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>91</td>\n",
       "      <td>liberia</td>\n",
       "      <td>nafa</td>\n",
       "      <td>2023-07-05T00:00:00Z</td>\n",
       "      <td>-35.852646</td>\n",
       "      <td>64.266907</td>\n",
       "      <td>164.706284</td>\n",
       "      <td>67.929138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>905</th>\n",
       "      <td>13</td>\n",
       "      <td>dominican republic</td>\n",
       "      <td>banco bhd leon</td>\n",
       "      <td>2023-07-03T00:00:00Z</td>\n",
       "      <td>11193.402344</td>\n",
       "      <td>16312.373047</td>\n",
       "      <td>21978.222656</td>\n",
       "      <td>16829.058594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>906</th>\n",
       "      <td>13</td>\n",
       "      <td>dominican republic</td>\n",
       "      <td>banco bhd leon</td>\n",
       "      <td>2023-07-04T00:00:00Z</td>\n",
       "      <td>17071.328125</td>\n",
       "      <td>24609.080078</td>\n",
       "      <td>31209.076172</td>\n",
       "      <td>24075.027344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>907</th>\n",
       "      <td>13</td>\n",
       "      <td>dominican republic</td>\n",
       "      <td>banco bhd leon</td>\n",
       "      <td>2023-07-05T00:00:00Z</td>\n",
       "      <td>21069.589844</td>\n",
       "      <td>29186.982422</td>\n",
       "      <td>34376.789062</td>\n",
       "      <td>28423.937500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>908</th>\n",
       "      <td>13</td>\n",
       "      <td>dominican republic</td>\n",
       "      <td>banco bhd leon</td>\n",
       "      <td>2023-07-06T00:00:00Z</td>\n",
       "      <td>14206.187500</td>\n",
       "      <td>24285.154297</td>\n",
       "      <td>33788.683594</td>\n",
       "      <td>24045.482422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>909</th>\n",
       "      <td>13</td>\n",
       "      <td>dominican republic</td>\n",
       "      <td>banco bhd leon</td>\n",
       "      <td>2023-07-07T00:00:00Z</td>\n",
       "      <td>21865.972656</td>\n",
       "      <td>30856.591797</td>\n",
       "      <td>39895.179688</td>\n",
       "      <td>31075.078125</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>910 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     item_id             country           payer                  date  \\\n",
       "0         91             liberia            nafa  2023-07-01T00:00:00Z   \n",
       "1         91             liberia            nafa  2023-07-02T00:00:00Z   \n",
       "2         91             liberia            nafa  2023-07-03T00:00:00Z   \n",
       "3         91             liberia            nafa  2023-07-04T00:00:00Z   \n",
       "4         91             liberia            nafa  2023-07-05T00:00:00Z   \n",
       "..       ...                 ...             ...                   ...   \n",
       "905       13  dominican republic  banco bhd leon  2023-07-03T00:00:00Z   \n",
       "906       13  dominican republic  banco bhd leon  2023-07-04T00:00:00Z   \n",
       "907       13  dominican republic  banco bhd leon  2023-07-05T00:00:00Z   \n",
       "908       13  dominican republic  banco bhd leon  2023-07-06T00:00:00Z   \n",
       "909       13  dominican republic  banco bhd leon  2023-07-07T00:00:00Z   \n",
       "\n",
       "              p10           p50           p90          mean  \n",
       "0     -209.463943     45.884727    339.438873     37.864941  \n",
       "1     -164.590088      6.275280    131.478683      9.303105  \n",
       "2        5.402088     60.157650    114.486313     59.723827  \n",
       "3      -58.251900    129.881897    262.771912    111.680710  \n",
       "4      -35.852646     64.266907    164.706284     67.929138  \n",
       "..            ...           ...           ...           ...  \n",
       "905  11193.402344  16312.373047  21978.222656  16829.058594  \n",
       "906  17071.328125  24609.080078  31209.076172  24075.027344  \n",
       "907  21069.589844  29186.982422  34376.789062  28423.937500  \n",
       "908  14206.187500  24285.154297  33788.683594  24045.482422  \n",
       "909  21865.972656  30856.591797  39895.179688  31075.078125  \n",
       "\n",
       "[910 rows x 8 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b001151a-4094-4a8e-8b22-567e3e1f4e9e",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "130"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df['item_id'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "18e08b73-36f8-4dd1-9f92-c88b41e2ecdb",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_mex = final_df[final_df['country'] == 'mexico'].drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "bfb1c30a-4860-46e1-9e2f-60667694b75c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>item_id</th>\n",
       "      <th>country</th>\n",
       "      <th>payer</th>\n",
       "      <th>date</th>\n",
       "      <th>p10</th>\n",
       "      <th>p50</th>\n",
       "      <th>p90</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>125</td>\n",
       "      <td>mexico</td>\n",
       "      <td>walmart (ut)</td>\n",
       "      <td>2023-07-01T00:00:00Z</td>\n",
       "      <td>497608.437500</td>\n",
       "      <td>555525.687500</td>\n",
       "      <td>613197.500000</td>\n",
       "      <td>555688.062500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>125</td>\n",
       "      <td>mexico</td>\n",
       "      <td>walmart (ut)</td>\n",
       "      <td>2023-07-02T00:00:00Z</td>\n",
       "      <td>402640.000000</td>\n",
       "      <td>457610.656250</td>\n",
       "      <td>517363.281250</td>\n",
       "      <td>455935.687500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>125</td>\n",
       "      <td>mexico</td>\n",
       "      <td>walmart (ut)</td>\n",
       "      <td>2023-07-03T00:00:00Z</td>\n",
       "      <td>354694.187500</td>\n",
       "      <td>401725.406250</td>\n",
       "      <td>461940.343750</td>\n",
       "      <td>406873.468750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>125</td>\n",
       "      <td>mexico</td>\n",
       "      <td>walmart (ut)</td>\n",
       "      <td>2023-07-04T00:00:00Z</td>\n",
       "      <td>247843.296875</td>\n",
       "      <td>280589.687500</td>\n",
       "      <td>318659.968750</td>\n",
       "      <td>281861.187500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>125</td>\n",
       "      <td>mexico</td>\n",
       "      <td>walmart (ut)</td>\n",
       "      <td>2023-07-05T00:00:00Z</td>\n",
       "      <td>350918.062500</td>\n",
       "      <td>410146.812500</td>\n",
       "      <td>473147.031250</td>\n",
       "      <td>408153.531250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>884</th>\n",
       "      <td>62</td>\n",
       "      <td>mexico</td>\n",
       "      <td>farmacias guadalajara (ut)</td>\n",
       "      <td>2023-07-03T00:00:00Z</td>\n",
       "      <td>85352.523438</td>\n",
       "      <td>99086.820312</td>\n",
       "      <td>117133.796875</td>\n",
       "      <td>100447.187500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>885</th>\n",
       "      <td>62</td>\n",
       "      <td>mexico</td>\n",
       "      <td>farmacias guadalajara (ut)</td>\n",
       "      <td>2023-07-04T00:00:00Z</td>\n",
       "      <td>61527.531250</td>\n",
       "      <td>72116.320312</td>\n",
       "      <td>83327.812500</td>\n",
       "      <td>72015.882812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>62</td>\n",
       "      <td>mexico</td>\n",
       "      <td>farmacias guadalajara (ut)</td>\n",
       "      <td>2023-07-05T00:00:00Z</td>\n",
       "      <td>78019.039062</td>\n",
       "      <td>93691.562500</td>\n",
       "      <td>105778.070312</td>\n",
       "      <td>92055.242188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>62</td>\n",
       "      <td>mexico</td>\n",
       "      <td>farmacias guadalajara (ut)</td>\n",
       "      <td>2023-07-06T00:00:00Z</td>\n",
       "      <td>63274.964844</td>\n",
       "      <td>78816.945312</td>\n",
       "      <td>94317.593750</td>\n",
       "      <td>79809.843750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>62</td>\n",
       "      <td>mexico</td>\n",
       "      <td>farmacias guadalajara (ut)</td>\n",
       "      <td>2023-07-07T00:00:00Z</td>\n",
       "      <td>109658.492188</td>\n",
       "      <td>127782.539062</td>\n",
       "      <td>144197.593750</td>\n",
       "      <td>126995.500000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>147 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     item_id country                       payer                  date  \\\n",
       "14       125  mexico                walmart (ut)  2023-07-01T00:00:00Z   \n",
       "15       125  mexico                walmart (ut)  2023-07-02T00:00:00Z   \n",
       "16       125  mexico                walmart (ut)  2023-07-03T00:00:00Z   \n",
       "17       125  mexico                walmart (ut)  2023-07-04T00:00:00Z   \n",
       "18       125  mexico                walmart (ut)  2023-07-05T00:00:00Z   \n",
       "..       ...     ...                         ...                   ...   \n",
       "884       62  mexico  farmacias guadalajara (ut)  2023-07-03T00:00:00Z   \n",
       "885       62  mexico  farmacias guadalajara (ut)  2023-07-04T00:00:00Z   \n",
       "886       62  mexico  farmacias guadalajara (ut)  2023-07-05T00:00:00Z   \n",
       "887       62  mexico  farmacias guadalajara (ut)  2023-07-06T00:00:00Z   \n",
       "888       62  mexico  farmacias guadalajara (ut)  2023-07-07T00:00:00Z   \n",
       "\n",
       "               p10            p50            p90           mean  \n",
       "14   497608.437500  555525.687500  613197.500000  555688.062500  \n",
       "15   402640.000000  457610.656250  517363.281250  455935.687500  \n",
       "16   354694.187500  401725.406250  461940.343750  406873.468750  \n",
       "17   247843.296875  280589.687500  318659.968750  281861.187500  \n",
       "18   350918.062500  410146.812500  473147.031250  408153.531250  \n",
       "..             ...            ...            ...            ...  \n",
       "884   85352.523438   99086.820312  117133.796875  100447.187500  \n",
       "885   61527.531250   72116.320312   83327.812500   72015.882812  \n",
       "886   78019.039062   93691.562500  105778.070312   92055.242188  \n",
       "887   63274.964844   78816.945312   94317.593750   79809.843750  \n",
       "888  109658.492188  127782.539062  144197.593750  126995.500000  \n",
       "\n",
       "[147 rows x 8 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mex"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "f00b74ac-2f36-44eb-b7ad-953767d6c674",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Traer daily_check"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6565d184-bfc6-40dc-97ec-7e88b6a817c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import hashlib\n",
    "\n",
    "def generate_numeric_id(payer, country):\n",
    "    unique_str = f\"{payer}_{country}\"\n",
    "    hashed_id = hashlib.sha256(unique_str.encode()).hexdigest()\n",
    "    numeric_id = int(hashed_id, 16)\n",
    "    print(hashed_id, numeric_id)\n",
    "    return numeric_id\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f7fe8ef0-e5f0-4fc4-b9b5-b690361e69ac",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7a117d6601cafd6598705c6b11c167a52f4267fb557fed2881395f8a526a114e 55213069395656458249850694093595503893574171976042804057978252470652672545102\n"
     ]
    }
   ],
   "source": [
    "# Ejemplo de uso\n",
    "payer = \"walmart\"\n",
    "country = \"mexico\"\n",
    "numeric_id = generate_numeric_id(payer, country)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2c3ca26e-df26-478e-9bc6-c36a107b0f38",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "availableInstances": [
   {
    "_defaultOrder": 0,
    "_isFastLaunch": true,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 4,
    "name": "ml.t3.medium",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 1,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.t3.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 2,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.t3.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 3,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.t3.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 4,
    "_isFastLaunch": true,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.m5.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 5,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.m5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 6,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.m5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 7,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.m5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 8,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.m5.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 9,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.m5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 10,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.m5.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 11,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.m5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 12,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.m5d.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 13,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.m5d.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 14,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.m5d.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 15,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.m5d.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 16,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.m5d.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 17,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.m5d.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 18,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.m5d.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 19,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.m5d.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 20,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": true,
    "memoryGiB": 0,
    "name": "ml.geospatial.interactive",
    "supportedImageNames": [
     "sagemaker-geospatial-v1-0"
    ],
    "vcpuNum": 0
   },
   {
    "_defaultOrder": 21,
    "_isFastLaunch": true,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 4,
    "name": "ml.c5.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 22,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.c5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 23,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.c5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 24,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.c5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 25,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 72,
    "name": "ml.c5.9xlarge",
    "vcpuNum": 36
   },
   {
    "_defaultOrder": 26,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 96,
    "name": "ml.c5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 27,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 144,
    "name": "ml.c5.18xlarge",
    "vcpuNum": 72
   },
   {
    "_defaultOrder": 28,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.c5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 29,
    "_isFastLaunch": true,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.g4dn.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 30,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.g4dn.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 31,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.g4dn.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 32,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.g4dn.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 33,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.g4dn.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 34,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.g4dn.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 35,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 61,
    "name": "ml.p3.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 36,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 244,
    "name": "ml.p3.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 37,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 488,
    "name": "ml.p3.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 38,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 768,
    "name": "ml.p3dn.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 39,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.r5.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 40,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.r5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 41,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.r5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 42,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.r5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 43,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.r5.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 44,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.r5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 45,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 512,
    "name": "ml.r5.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 46,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 768,
    "name": "ml.r5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 47,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.g5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 48,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.g5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 49,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.g5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 50,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.g5.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 51,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.g5.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 52,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.g5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 53,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.g5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 54,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 768,
    "name": "ml.g5.48xlarge",
    "vcpuNum": 192
   },
   {
    "_defaultOrder": 55,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 1152,
    "name": "ml.p4d.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 56,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 1152,
    "name": "ml.p4de.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 57,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.trn1.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 58,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 512,
    "name": "ml.trn1.32xlarge",
    "vcpuNum": 128
   },
   {
    "_defaultOrder": 59,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 512,
    "name": "ml.trn1n.32xlarge",
    "vcpuNum": 128
   }
  ],
  "instance_type": "ml.t3.medium",
  "kernelspec": {
   "display_name": "Python 3 (Data Science 3.0)",
   "language": "python",
   "name": "python3__SAGEMAKER_INTERNAL__arn:aws:sagemaker:us-east-1:081325390199:image/sagemaker-data-science-310-v1"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
